// Get the canvas element and set up the context
const canvas = document.getElementById("canvas");
const ctx = canvas.getContext("2d");

// Set up the game variables
let snake = [{x: 10, y: 10}];
let direction = "right";
let food = {x: 0, y: 0};

// Set up the game loop
function gameLoop() {
  // Clear the canvas
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  
  // Update the snake's position
  let head = {x: snake[0].x, y: snake[0].y};
  if (direction === "right") {
    head.x++;
  } else if (direction === "left") {
    head.x--;
  } else if (direction === "up") {
    head.y--;
  } else if (direction === "down") {
    head.y++;
  }
  snake.unshift(head);
  snake.pop();
  
  // Draw the snake
  ctx.fillStyle = "green";
  for (let i = 0; i < snake.length; i++) {
    ctx.fillRect(snake[i].x * 10, snake[i].y * 10, 10, 10);
  }
  
  // Draw the food
  ctx.fillStyle = "red";
  ctx.fillRect(food.x * 10, food.y * 10, 10, 10);
  
  // Check for collisions
  if (head.x === food.x && head.y === food.y) {
    // Increase the snake's length
    snake.push({x: snake[snake.length - 1].x, y: snake[snake.length - 1].y});
    
    // Spawn a new food
    food.x = Math.floor(Math.random() * canvas.width / 10);
    food.y = Math.floor(Math.random() * canvas.height / 10);
  }
  
  // Check for game over
  if (head.x < 0 || head.x >= canvas.width / 10 || head.y < 0 || head.y >= canvas.height / 10) {
    clearInterval(gameInterval);
    alert("Game over!");
  } else {
    // Keep the game loop running
    setTimeout(gameLoop, 100);
  }
}

// Set up the keyboard controls
document.addEventListener("keydown", (event) => {
  if (event.code === "ArrowRight" && direction !== "left") {
    direction = "right";
  } else if (event.code === "ArrowLeft" && direction !== "right") {
    direction = "left";
  } else if (event.code === "ArrowUp" && direction !== "down") {
    direction = "up";
  } else if (event.code === "ArrowDown" && direction !== "up") {
    direction = "down";
  }
});

// Start the game loop
const gameInterval = setInterval(gameLoop, 100);
